/*!
 * el-select-tree v2.1.1-beta.15
 * (c) 2019-2024 yujinpan
 * Released under the MIT License.
 */

import 'core-js/modules/es.array.map.js';
import Vue from 'vue';

/**
 * create when use
 */
function getElTreeNodeVirtual() {
  if (getElTreeNodeVirtual._cache) return getElTreeNodeVirtual._cache;
  var ElTreeNode = Vue.component('ElTree').options.components.ElTreeNode;
  return getElTreeNodeVirtual._cache = {
    name: 'ElTreeNode',
    extends: ElTreeNode,
    methods: {
      getDataKeys: function getDataKeys(data) {
        var storeVirtual = this.tree.storeVirtual;
        return data.map(function (item) {
          return storeVirtual.getNode(item).key;
        });
      },
      handleCheckChange: function handleCheckChange(value, ev) {
        var _this = this;
        this.node.setChecked(ev.target.checked, !this.tree.checkStrictly);

        // use virtual check

        var storeVirtual = this.tree.storeVirtual;
        var nodeVirtual = storeVirtual.getNode(this.node.key);
        nodeVirtual.setChecked(ev.target.checked, !this.tree.checkStrictly);
        this.$nextTick(function () {
          var checkedNodes = storeVirtual.getCheckedNodes();
          var checkedKeys = _this.getDataKeys(checkedNodes);
          var halfCheckedNodes = storeVirtual.getHalfCheckedNodes();
          var halfCheckedKeys = _this.getDataKeys(halfCheckedNodes);
          _this.tree.$emit('check', _this.node.data, {
            checkedNodes: checkedNodes,
            checkedKeys: checkedKeys,
            halfCheckedNodes: halfCheckedNodes,
            halfCheckedKeys: halfCheckedKeys
          });
        });
      }
    }
  };
}
getElTreeNodeVirtual._cache = null;

export { getElTreeNodeVirtual as default };
