/*!
 * el-select-tree v2.1.1-beta.15
 * (c) 2019-2024 yujinpan
 * Released under the MIT License.
 */

import _objectSpread from '@babel/runtime/helpers/esm/objectSpread2';
import _toConsumableArray from '@babel/runtime/helpers/esm/toConsumableArray';
import _initializerDefineProperty from '@babel/runtime/helpers/esm/initializerDefineProperty';
import _classCallCheck from '@babel/runtime/helpers/esm/classCallCheck';
import _createClass from '@babel/runtime/helpers/esm/createClass';
import _callSuper from '@babel/runtime/helpers/esm/callSuper';
import _inherits from '@babel/runtime/helpers/esm/inherits';
import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';
import _applyDecoratedDescriptor from '@babel/runtime/helpers/esm/applyDecoratedDescriptor';
import '@babel/runtime/helpers/esm/initializerWarningHelper';
import 'core-js/modules/es.array.concat.js';
import 'core-js/modules/es.array.includes.js';
import 'core-js/modules/es.array.push.js';
import 'core-js/modules/es.number.constructor.js';
import 'core-js/modules/es.object.get-own-property-descriptor.js';
import 'core-js/modules/es.object.to-string.js';
import 'core-js/modules/es.string.includes.js';
import 'core-js/modules/web.dom-collections.for-each.js';
import 'core-js/modules/web.dom-collections.iterator.js';
import { Component, Prop, Watch } from 'vue-property-decorator';
import ElSelectTree from './ElSelectTree.js';
import getElSelectVirtual from './ElSelectVirtual.js';
import getElTreeVirtual from './ElTreeVirtual.js';
import { toArr, spliceItem, isValidArr, treeEach, treeFilter, treeFind, getParentKeys } from './utils.js';
import { virtualList, VirtualStore } from './virtual-list.js';
import __vue_normalize__ from 'vue-runtime-helpers/dist/normalize-component.js';

var _dec, _dec2, _dec3, _dec4, _class, _class2, _descriptor;
var ElSelectTreeVirtual = (_dec = Component({
  name: 'ElSelectTreeVirtual',
  directives: {
    virtualList: virtualList
  }
}), _dec2 = Prop({
  type: Number,
  default: 200
}), _dec3 = Watch('data', {
  immediate: true
}), _dec4 = Watch('_expandedKeys', {
  immediate: true,
  deep: true
}), _dec(_class = (_class2 = /*#__PURE__*/function (_ElSelectTree) {
  function ElSelectTreeVirtual() {
    var _this;
    _classCallCheck(this, ElSelectTreeVirtual);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper(this, ElSelectTreeVirtual, [].concat(args));
    _initializerDefineProperty(_this, "filterDebounceDuration", _descriptor, _this);
    _defineProperty(_this, "virtualStore", new VirtualStore({
      expandedKeys: [],
      sourceData: [],
      itemHeight: 26,
      valueProp: 'value',
      childrenProp: 'children'
    }));
    _defineProperty(_this, "virtualExpandedKeys", []);
    _defineProperty(_this, "filterState", {
      stop: false
    });
    return _this;
  }
  _inherits(ElSelectTreeVirtual, _ElSelectTree);
  return _createClass(ElSelectTreeVirtual, [{
    key: "onDataChange",
    value: function onDataChange() {
      this.virtualStore.setOptions({
        sourceData: this.data,
        valueProp: this.propsMixin.value,
        childrenProp: this.propsMixin.children
      });
    }
  }, {
    key: "onExpandedKeysChange",
    value: function onExpandedKeysChange(val) {
      this.virtualStore.setOptions({
        expandedKeys: val
      });
    }
  }, {
    key: "render",
    value: function render(h) {
      this.renderValidate();
      return h(getElSelectVirtual(), this._getSelectVNodeData(), [].concat(_toConsumableArray(this.renderSlots(h)), [this.renderCacheOptions(h), h(getElTreeVirtual(), this._getTreeVNodeData())]));
    }
  }, {
    key: "_expandedKeys",
    get: function get() {
      return this.expandedKeys.concat(this.virtualExpandedKeys);
    }
  }, {
    key: "_getSelectVNodeData",
    value: function _getSelectVNodeData() {
      var _this2 = this;
      var data = this.getSelectVNodeData();
      data.directives = [{
        name: 'virtualList',
        value: {
          target: '.el-scrollbar__wrap',
          virtualStore: this.virtualStore
        }
      }];
      data.on = _objectSpread(_objectSpread({}, data.on), {}, {
        'visible-change': function visibleChange(val) {
          _this2._visibleChange(val);

          // reset when no selected
          if (val) {
            _this2.virtualStore.setScrollTop(0);
          }
        }
      });
      return data;
    }
  }, {
    key: "_getTreeVNodeData",
    value: function _getTreeVNodeData() {
      var _this3 = this;
      var data = this.getTreeVNodeData();
      data.props = _objectSpread(_objectSpread({}, data.props), {}, {
        defaultExpandedKeys: this._expandedKeys,
        defaultCheckedKeys: this.values.concat(this.defaultCheckedKeys || [])
      });
      data.props.data = this.virtualStore.data;
      data.props.dataVirtual = this.data;
      Object.assign(data.on, {
        'node-expand': function nodeExpand(node) {
          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
            args[_key2 - 1] = arguments[_key2];
          }
          var value = _this3.getValByProp('value', node);
          if (!_this3.virtualExpandedKeys.includes(value)) {
            _this3.virtualExpandedKeys.push(value);
            toArr(_this3.$listeners['node-expand']).forEach(function (item) {
              return item.apply(void 0, [node].concat(args));
            });
          }
        },
        'node-collapse': function nodeCollapse(node) {
          for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
            args[_key3 - 1] = arguments[_key3];
          }
          var value = _this3.getValByProp('value', node);
          if (_this3.virtualExpandedKeys.includes(value)) {
            spliceItem(_this3.virtualExpandedKeys, value);
            var children = _this3.getValByProp('children', node);
            if (isValidArr(children)) {
              treeEach(children, function (node) {
                var value = _this3.getValByProp('value', node);
                if (_this3.virtualExpandedKeys.includes(value)) {
                  spliceItem(_this3.virtualExpandedKeys, value);
                }
              }, function (node) {
                return _this3.getValByProp('children', node);
              });
            }
            toArr(_this3.$listeners['node-collapse']).forEach(function (item) {
              return item.apply(void 0, [node].concat(args));
            });
          }
        }
      });
      return data;
    }
  }, {
    key: "_filterMethod",
    value: function _filterMethod() {
      var _this4 = this;
      var val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      if (this.filterMethod) return this.filterMethod(val);
      this.filterState.stop = true;
      if (this.debounceTimeId) {
        clearTimeout(this.debounceTimeId);
      }
      if (!val) {
        this.virtualExpandedKeys = [];
        return this.virtualStore.setOptions({
          sourceData: this.data
        });
      }
      this.debounceTimeId = setTimeout(function () {
        treeFilter(_this4.data, function (node) {
          return _this4._filterNodeMethod(val, node, node);
        }, _this4.propsMixin.children, _this4.filterState = {
          stop: false
        }).then(function (data) {
          var firstLeaf = treeFind(data, function (node) {
            return !isValidArr(node.children);
          }, function (node) {
            return _this4.getValByProp('children', node);
          });
          var firstLeafValue = firstLeaf ? _this4.getValByProp('value', firstLeaf) : undefined;
          _this4.virtualExpandedKeys = firstLeafValue ? [firstLeafValue].concat(_toConsumableArray(getParentKeys([firstLeafValue], data, _this4.getValByProp))) : [];
          _this4.virtualStore.setOptions({
            sourceData: data
          });
        }, function () {
          // ignore
        });
      }, this.filterDebounceDuration);
    }
  }]);
}(ElSelectTree), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "filterDebounceDuration", [_dec2], {
  configurable: true,
  enumerable: true,
  writable: true,
  initializer: null
}), _applyDecoratedDescriptor(_class2.prototype, "onDataChange", [_dec3], Object.getOwnPropertyDescriptor(_class2.prototype, "onDataChange"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "onExpandedKeysChange", [_dec4], Object.getOwnPropertyDescriptor(_class2.prototype, "onExpandedKeysChange"), _class2.prototype)), _class2)) || _class);

/* script */
var __vue_script__ = ElSelectTreeVirtual;

/* template */

/* style */
var __vue_inject_styles__ = undefined;
/* scoped */
var __vue_scope_id__ = undefined;
/* module identifier */
var __vue_module_identifier__ = undefined;
/* functional template */
var __vue_is_functional_template__ = undefined;
/* style inject */

/* style inject SSR */

/* style inject shadow dom */

var __vue_component__ = /*#__PURE__*/__vue_normalize__({}, __vue_inject_styles__, __vue_script__, __vue_scope_id__, __vue_is_functional_template__, __vue_module_identifier__, false, undefined, undefined, undefined);

export { __vue_component__ as default };
